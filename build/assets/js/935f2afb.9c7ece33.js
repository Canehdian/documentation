"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[53],{1109:function(e){e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"sidebar":[{"type":"category","label":"Plugins","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Starboards","href":"/Plugins/starboard","docId":"Plugins/starboard"},{"type":"link","label":"tickets","href":"/Plugins/tickets","docId":"Plugins/tickets"}]},{"type":"link","label":"Atlas Documentation","href":"/","docId":"README"},{"type":"category","label":"Scripts","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Arrays","href":"/Scripts/arrays","docId":"Scripts/arrays"},{"type":"link","label":"Blocks","href":"/Scripts/blocks","docId":"Scripts/blocks"},{"type":"link","label":"Comments","href":"/Scripts/comments","docId":"Scripts/comments"},{"type":"link","label":"Functions","href":"/Scripts/functions","docId":"Scripts/functions"},{"type":"link","label":"Importing Scripts","href":"/Scripts/imports","docId":"Scripts/imports"},{"type":"link","label":"Objects","href":"/Scripts/objects","docId":"Scripts/objects"},{"type":"link","label":"Options & Parameters","href":"/Scripts/options-and-parameters","docId":"Scripts/options-and-parameters"},{"type":"link","label":"Returning","href":"/Scripts/returning","docId":"Scripts/returning"},{"type":"link","label":"Scopes","href":"/Scripts/scopes","docId":"Scripts/scopes"},{"type":"link","label":"Variables","href":"/Scripts/variables","docId":"Scripts/variables"}]},{"type":"category","label":"Tags","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Plugins","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Suggestion tags","href":"/Tags/Plugins/suggestion","docId":"Tags/Plugins/suggestion"},{"type":"link","label":"Ticket tags","href":"/Tags/Plugins/ticket","docId":"Tags/Plugins/ticket"}]},{"type":"link","label":"`{channel}` tags","href":"/Tags/channel","docId":"Tags/channel"},{"type":"link","label":"Command Tags","href":"/Tags/command-tags","docId":"Tags/command-tags"},{"type":"link","label":"Global tags","href":"/Tags/global","docId":"Tags/global"},{"type":"link","label":"{message}","href":"/Tags/message","docId":"Tags/message"},{"type":"link","label":"`{responder}` tags","href":"/Tags/responder","docId":"Tags/responder"},{"type":"link","label":"`{role}` tags","href":"/Tags/role","docId":"Tags/role"},{"type":"link","label":"{server}","href":"/Tags/server","docId":"Tags/server"},{"type":"link","label":"`{store}` tags","href":"/Tags/store","docId":"Tags/store"},{"type":"link","label":"`{user}` tags","href":"/Tags/user","docId":"Tags/user"}]}]},"docs":{"Plugins/starboard":{"id":"Plugins/starboard","title":"Starboards","description":"Starboards are channels where messages go when a specific reaction is added. In the most common variant of this, reacting with a \u2b50 would send an embed of that message to a channel named #starboard.","sidebar":"sidebar"},"Plugins/tickets":{"id":"Plugins/tickets","title":"tickets","description":"Tickets","sidebar":"sidebar"},"README":{"id":"README","title":"Atlas Documentation","description":"Welcome to the documentation for Atlas! Here you can find guides and detailed information on all most functionality Atlas has. We\'re working towards cleaning up and simplifying these guides, so if you find issues or get confused come tell us in our support server so we can improve things for everyone.","sidebar":"sidebar"},"Scripts/arrays":{"id":"Scripts/arrays","title":"Arrays","description":"Arrays are lists of items that can be iterated over or passed to other tags. {[one;two;three]} would create an array with 3 elements.","sidebar":"sidebar"},"Scripts/blocks":{"id":"Scripts/blocks","title":"Blocks","description":"Both  and {for} also support a block syntax with regular brackets. For the [#if] block, it is not possible to have a body that will run when the condition is false.","sidebar":"sidebar"},"Scripts/comments":{"id":"Scripts/comments","title":"Comments","description":"It\'s important to comment your code so your future self or others can understand what your code is doing.","sidebar":"sidebar"},"Scripts/functions":{"id":"Scripts/functions","title":"Functions","description":"Scripts can define functions that can be invoked with arguments. The first parameter is the name of the function, and the last is the body of the function. Parameters in between are function parameters.","sidebar":"sidebar"},"Scripts/imports":{"id":"Scripts/imports","title":"Importing Scripts","description":"Using  you can import any action in the server. The Script action trigger type is specifically made for use with {import}, as the trigger will never fire. {import} will inline the imported script and expose any functions it has in the current script.","sidebar":"sidebar"},"Scripts/objects":{"id":"Scripts/objects","title":"Objects","description":"Objects are used to store data in a structured format. You can use them to create embeds or store data about things.","sidebar":"sidebar"},"Scripts/options-and-parameters":{"id":"Scripts/options-and-parameters","title":"Options & Parameters","description":"Tag parameters are how you get tags to do what you want. For example, {channel.id;off-topic} will get the channel.id tag to return the ID of the off-topic channel. In that example, off-topic is the tag parameter, and it will be given to channel.id so it knows what you want.","sidebar":"sidebar"},"Scripts/returning":{"id":"Scripts/returning","title":"Returning","description":"can be used to return early. For advanced actions, you should likely always use {return} as it filters out useless and unwanted data.","sidebar":"sidebar"},"Scripts/scopes":{"id":"Scripts/scopes","title":"Scopes","description":"Scopes limit where variables can be accessed. For example, the body of a function is a separate scope. Variables in the parent scope are accessible in the function body, but variables created in the function body are inaccessible in the parent scope once the function is called.","sidebar":"sidebar"},"Scripts/variables":{"id":"Scripts/variables","title":"Variables","description":"Variables let you store values for later use.","sidebar":"sidebar"},"Tags/channel":{"id":"Tags/channel","title":"`{channel}` tags","description":"{channel.mention;channel}","sidebar":"sidebar"},"Tags/command-tags":{"id":"Tags/command-tags","title":"Command Tags","description":"There are future plans to deprecate command tags and instead have each command register its own tag. {.is-warning}","sidebar":"sidebar"},"Tags/global":{"id":"Tags/global","title":"Global tags","description":"{time format;time}","sidebar":"sidebar"},"Tags/message":{"id":"Tags/message","title":"{message}","description":"{message.id;message}","sidebar":"sidebar"},"Tags/Plugins/suggestion":{"id":"Tags/Plugins/suggestion","title":"Suggestion tags","description":"{suggestion.authorId}","sidebar":"sidebar"},"Tags/Plugins/ticket":{"id":"Tags/Plugins/ticket","title":"Ticket tags","description":"{ticket.author;channel}","sidebar":"sidebar"},"Tags/responder":{"id":"Tags/responder","title":"`{responder}` tags","description":"tags let you construct a message that will be sent once the action is over, or you manually send it. These tags are meant to be chained together to form a complete responder.","sidebar":"sidebar"},"Tags/role":{"id":"Tags/role","title":"`{role}` tags","description":"{role.id;role}","sidebar":"sidebar"},"Tags/server":{"id":"Tags/server","title":"{server}","description":"This was previously named . All {server} tags have a {guild} alias for backwards compatibility. {server.id} is the same as {guild.id}.","sidebar":"sidebar"},"Tags/store":{"id":"Tags/store","title":"`{store}` tags","description":"Tags used to keep values and data across invocations.  and {perget} are analogs from v8.","sidebar":"sidebar"},"Tags/user":{"id":"Tags/user","title":"`{user}` tags","description":"{user.mention;user}","sidebar":"sidebar"}}}')}}]);